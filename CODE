#include "stm32f4xx.h"
void GPIO_Init(void);
void TIM3_PWM_Init(uint16_t duty);
int main(void)
{
    GPIO_Init();
    TIM3_PWM_Init(0);
    uint16_t duty=0;
    int8_t step=1;
    while (1)
    {
        TIM3->CCR1=duty;
        for(volatile int i=0; i<4000;i++);
        duty += step;
        if (duty >= 1000 || duty <= 0)
            step = -step;
    }
}
void GPIO_Init(void)
{
    RCC->AHB1ENR|=RCC_AHB1ENR_GPIOAEN;
    GPIOA->MODER|=(2 << (6 * 2));
    GPIOA->AFR[0]|=(2 << (6 * 4));
}
void TIM3_PWM_Init(uint16_t duty)
{
    RCC->APB1ENR|=RCC_APB1ENR_TIM3EN;
    TIM3->PSC=16-1;
    TIM3->ARR=1000-1;
    TIM3->CCR1=duty;
    TIM3->CCMR1|=(6 << 4);
    TIM3->CCMR1|=TIM_CCMR1_OC1PE;
    TIM3->CCER|=TIM_CCER_CC1E;
    TIM3->CR1|=TIM_CR1_ARPE;
    TIM3->EGR|=TIM_EGR_UG;
    TIM3->CR1|=TIM_CR1_CEN;
}
